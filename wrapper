#!/bin/bash

source raspberrypi-toolchain.config
source android-toolchain.config

name=${0##*/}
cmd=${name##*-}
target=${name%-*}

case $name in
	*-cabal)
		fcommon="--builddir=dist/${target}"
		fcompile=" --with-ghc=${target}-ghc"
		fcompile+=" --with-ghc-pkg=${target}-ghc-pkg"
		fcompile+=" --with-gcc=${target}-clang"
		fcompile+=" --with-ld=${target}-ld"
		fcompile+=" --hsc2hs-options=--cross-compile"
		fconfig="--disable-shared --configure-option=--host=${target}"
		case $1 in
			configure|install) flags="${fcommon} ${fcompile} ${fconfig}" ;;
			build)             flags="${fcommon} ${fcompile}" ;;
			list|info|update)  flags="" ;;
			"")                flags="" ;;
			*)                 flags=$fcommon ;;
		esac
		;;
	# raspberry pi
	arm-linux-gnueabihf-clang)
		flags=" --target=${target}"
		flags+=" --sysroot=${RPI_SYSROOT}"
		flags+=" -isysroot ${RPI_SYSROOT}"
		flags+=" -isystem ${RPI_SYSROOT}/usr/include/${target}/"
		;;
	arm-linux-gnueabihf-ld|arm-linux-gnueabihf-ld.gold)
		flags=" --sysroot=${RPI_SYSROOT}"
		flags+=" -L${RPI_SYSROOT}/lib/${target}"
		;;
	# android (armv7)
	armv7-linux-androideabi-clang)
		flags=" --target=${target}"
		flags+=" --sysroot=${ADR32_SYSROOT}"
		flags+=" -isysroot ${ADR32_SYSROOT}"
		;;
	armv7-linux-androideabi-ld|armv7-linux-androideabi-ld.gold)
		flags=" --sysroot=${ADR32_SYSROOT}"
		flags+=" -L${ADR32_TOOLCHAIN_LIB}"
		;;
	# android (aarch64)
	aarch64-linux-android-clang)
		flags=" --target=${target}"
		flags+=" --sysroot=${ADR64_SYSROOT}"
		flags+=" -isysroot ${ADR64_SYSROOT}"
		;;
	aarch64-linux-android-ld|aarch64-linux-android-ld.gold)
		flags=" --sysroot=${ADR64_SYSROOT}"
		flags+=" -L${ADR64_TOOLCHAIN_LIB}"
		;;
	# iOS -- this us run though apples
	# xcrun tool.
	aarch64-apple-ios-clang|aarch64-apple-ios-ld)
		flags="--sdk iphoneos ${cmd} -arch arm64"
		cmd="xcrun"
		;;
	aarch64-apple-ios-*|aarch64-apple-ios-*)
		flags="--sdk iphoneos ${cmd}"
		cmd="xcrun"
		;;
	# iOS (64bit simulator)
	x86_64-apple-ios-clang|x86_64-apple-ios-ld)
		flags="--sdk iphonesimulator ${cmd} -arch x86_64"
		cmd="xcrun"
		;;
	x86_64-apple-ios-*)
		flags="--sdk iphonesimulator ${cmd}"
		cmd="xcrun"
		;;
	# default
	*-nm|*-ar|*-ranlib) ;;
	*) echo "Unknown command: ${0##*/}" >&2; exit 1;;
esac

case $target in
	*-linux-gnueabihf)      exec env PATH="${RPI_PATH}:${PATH}" $cmd $flags "$@" ;;
	armv7-linux-android*)   exec env PATH="${ADR32_PATH}:${PATH}" $cmd $flags "$@" ;;
	aarch64-linux-android*) exec env PATH="${ADR64_PATH}:${PATH}" $cmd $flags "$@" ;;
	*) exec $cmd $flags "$@" ;;
esac

